from sly import Lexer


class CalcLexer(Lexer):
    tokens = {'RECALL',
              'SCOPE',
              'FOR',
              'WHILE',
              'NOOPTIMIZE',
              'IN',
              'ID',
              'LESS',
              'LESS_OR_EQUAL',
              'EQUAL',
              'NOT_EQUAL',
              'GREATER',
              'GREATER_OR_EQUAL',
              'AND',
              'OR',
              'PLUS',
              'MINUS',
              'DIVIDE',
              'MULTIPLY',
              'NUMBER'}

    literals = {'(', ')', ';'}

    ignore = ' \t'

    RECALL = r'(?i)RECALL'
    SCOPE = r'(?i)ALL|NEXT|RECORD|REST'
    FOR = r'(?i)FOR'
    WHILE = r'(?i)WHILE'
    NOOPTIMIZE = r'(?i)NOOPTIMIZE'
    IN = r'(?i)IN'
    ID = r'[a-zA-Z_][a-zA-Z0-9_]*'

    LESS = r'<'
    LESS_OR_EQUAL = r'<='
    EQUAL = r'='
    NOT_EQUAL = r'!='
    GREATER = r'>'
    GREATER_OR_EQUAL = r'>='
    AND = r'(?i)(and)'
    OR = r'(?i)(or)'
    PLUS = r'\+'
    MINUS = r'\-'
    DIVIDE = r'\/'
    MULTIPLY = r'\*'

    @_(r'\d+')
    def NUMBER(self, t):
        t.value = int(t.value)
        return t

    def error(self, t):
        print("Illegal character '%s'" % t.value[0])
        self.index += 1


if __name__ == '__main__':
    examples = [
        'RECALL',
        'RECALL NEXT 10 FOR age * year <= 10 IN studentsWorkspace',
        'RECALL ALL FOR age = 10 WHILE year != 2022 NOOPTIMIZE IN students',
        'recall rest for _year >= 2000 and _year < 2022 nooptimize',
        '?!$',
    ]

    lexer = CalcLexer()

    for sample in examples:
        print('INPUT: ' + sample)
        for tok in lexer.tokenize(sample):
            print('type=%r, value=%r' % (tok.type, tok.value))
        print()

%%
[Hh][Ee][Ll][Ll][Oo]                            { pos += yyleng; printf("Привет"); }
[Dd][Ee][Ll][Ee][Tt][Ee]			{ pos += yyleng; printf('DELETE'); return yDELETE; }
[Ff][Oo][Rr]                              	{ pos += yyleng; printf("FOR\n"); return yFOR; }
[Ww][Hh][Ii][Ll][Ee]                        	{ pos += yyleng; printf("WHILE\n"); return yWHILE; }
[Aa][Nn][Dd]                                 	{ pos += yyleng; printf("AND\n"); return yAND; }
[Oo][Rr]                                     	{ pos += yyleng; printf("OR\n"); return yOR; }
"+"                                          	{ pos += yyleng; printf("PLUS\n"); return yPLUS; }
"-"                                          	{ pos += yyleng; printf("MINUS\n"); return yMINUS; }
"*"                                          	{ pos += yyleng; printf("MULTIPLY\n"); return yMULTIPLY; }
"/"                                          	{ pos += yyleng; printf("DIVIDE\n"); return yDIVIDE; }
[A-Za-z] 			                { yylval = yytext[yyleng-1] - 'a'; return(LETTER); }
[0-9] + 			                { int i; yylval = yytext[0] - '0'; for(i = 1; i < yyleng; i++)
%%
